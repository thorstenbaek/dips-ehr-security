apiVersion: v1
kind: Namespace
metadata:
  name: dips-ehr
  labels:
    app.kubernetes.io/name: dips-ehr
    app.kubernetes.io/instance: dips-ehr 
---    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dips-ehr-security-app
  namespace: dips-ehr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dips-ehr-security  
  template:
    metadata:
      labels:
        app: dips-ehr-security
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: dips-ehr-security
        image: thorstenbaek/dips-ehr-security:latest
        ports:        
        - containerPort: 80
        imagePullPolicy: IfNotPresent
        
---
apiVersion: v1
kind: Service
metadata:
  name: dips-ehr-security-svc
  namespace: dips-ehr
  labels:
    name: dips-ehr-security
  annotations:
    service.beta.kubernetes.io/azure-dns-label-name: dips-ehr-security # => http://dips-ehr-security.norwayeast.cloudapp.azure.com/
spec:
  type: LoadBalancer
  ports:
  - port: 80  
  selector:
    app: dips-ehr-security
---  
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dips-ehr-nginx-ingress
  namespace: dips-ehr
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:  
  tls:
    - hosts:
      - localhost
      # This assumes tls-secret exists and the SSL
      # certificate contains a CN for foo.bar.com
      secretName: tls-secret
  rules:
    - host: localhost
      http:
        paths:
        - path: /
          backend:
            # This assumes dips-ehr-security exists and routes to healthy endpoints
            serviceName: dips-ehr-security-svc
            servicePort: 80